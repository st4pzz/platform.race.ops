# docker compose up -d --build --force-recreate
version: '3.8'
name: ops

services:

  jenkins:
    container_name: jenkins
    build:
      dockerfile_inline: |
        FROM jenkins/jenkins:jdk21
        USER root
        RUN apt-get update && apt-get install -y lsb-release
        RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc \
          https://download.docker.com/linux/debian/gpg
        RUN echo "deb [arch=$(dpkg --print-architecture) \
          signed-by=/usr/share/keyrings/docker-archive-keyring.asc] \
          https://download.docker.com/linux/debian \
          $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
        RUN apt-get update && apt-get install -y docker-ce maven

        RUN apt-get install -y apt-transport-https ca-certificates curl
        RUN curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        RUN chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        RUN echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
        RUN chmod 644 /etc/apt/sources.list.d/kubernetes.list
        RUN apt-get update
        RUN apt-get install -y kubectl

        RUN usermod -aG docker jenkins
    ports:
      - 9080:8080
      - 50000:50000
    volumes:
      - $CONFIG/jenkins:/var/jenkins_home
      # for mac distro
      - /var/run/docker.sock:/var/run/docker.sock
    #restart: always
    networks:
      - infra

  # sonar:
  #   container_name: sonar
  #   image: sonarqube:latest
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - $CONFIG/sonarqube/data:/opt/sonarqube/data
  #     - $CONFIG/sonarqube/logs:/opt/sonarqube/logs
  #     - $CONFIG/sonarqube/extensions:/opt/sonarqube/extensions
  #   environment:
  #     - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
  #   networks:
  #     - infra

  # artilleryio:
  #   container_name: artilleryio
  #   image: artilleryio/artillery:latest
  #   # platform: linux/amd64
  #   volumes:
  #     - $CONFIG/artilleryio:/artillery
  #   networks:
  #     - infra

networks:
  infra:
    driver: bridge